---
const problems = [
  "頭痛、頭が重い",
  "首や肩のコリ",
  "疲れ目、ドライアイ",
  "眠りが浅い",
  "すぐに疲れる",
  "疲れが取れない",
  "やる気が出ない",
  "うっかりミスが多い",
  "集中力・記憶力が低下した",
  "ストレスが多い",
  "イライラする",
  "手足が冷える",
  "食欲不振",
];
---

<section>
  <div class="problems">
    <h3>こんなお悩みございませんか？</h3>
    <div class="wrapper">
      <ul>
        {
          problems.map((problem) => (
            <li class="list">
              <img
                src="/checked.svg"
                alt="チェック"
                width="14px"
                height="15px"
              />
              {problem}
            </li>
          ))
        }
      </ul>
      <div class="image"></div>
    </div>
  </div>

  <div class="suggestion">
    <div class="image2"></div>
    <div class="text-wrapper">
      <p>
        あなたのお悩み<br />「脳疲労」による<br /><span class="highlight"
          >自律神経のしわざ</span
        >かも･･･
      </p>
      <p>
        疲れた頭や体を<br />究極の癒しで<span class="primary">リセット</span
        >しませんか
      </p>
    </div>
  </div>
</section>

<style>
  section {
    padding-block: 24rem;
    max-width: 900px;
    margin: 0 auto;
  }
  .problems {
    display: flex;
    justify-content: center;
    flex-direction: column;
    gap: 2.4rem;
    max-width: 512px;
    overflow: hidden;
    padding-block: 24px;
  }
  h3 {
    font-weight: normal;
    text-align: center;
  }
  .wrapper {
    position: relative;
  }

  .image {
    position: absolute;
    z-index: -10;
    top: 10%;
    left: 40%;
    width: 100%;
    height: 80%;
    background-position: top;
    background-size: cover;
    background-repeat: no-repeat;
    background-image: url(/problem.jpg);
    border-radius: 16px 0 0 16px;
    filter: blur(1px);
    opacity: 0;
    transition: 2s 1s;
  }

  ul {
    padding-left: 2.4rem;
  }

  li {
    opacity: 0;
    font-size: 1.6rem;
    line-height: 200%;
    list-style: none;
    display: flex;
    align-items: center;
    gap: 8px;
  }

  li > img {
    padding-top: 4px;
  }

  .fadein {
    opacity: 0;
    width: 100%;
    animation: fadein 1s forwards linear;
    animation-iteration-count: 1;
  }
  .fadein:nth-child(1) {
    animation-delay: 0.1s;
  }
  .fadein:nth-child(2) {
    animation-delay: 0.2s;
  }
  .fadein:nth-child(3) {
    animation-delay: 0.3s;
  }
  .fadein:nth-child(4) {
    animation-delay: 0.4s;
  }
  .fadein:nth-child(5) {
    animation-delay: 0.5s;
  }
  .fadein:nth-child(6) {
    animation-delay: 0.6s;
  }
  .fadein:nth-child(7) {
    animation-delay: 0.7s;
  }
  .fadein:nth-child(8) {
    animation-delay: 0.8s;
  }
  .fadein:nth-child(9) {
    animation-delay: 0.9s;
  }
  .fadein:nth-child(10) {
    animation-delay: 1s;
  }
  .fadein:nth-child(11) {
    animation-delay: 1.1s;
  }
  .fadein:nth-child(12) {
    animation-delay: 1.2s;
  }
  .fadein:nth-child(13) {
    animation-delay: 1.3s;
  }

  .suggestion {
    position: relative;
    max-width: 640px;
    max-height: 622px;
    padding: 16px;
  }

  .image2 {
    width: auto;
    max-width: 482px;
    min-width: 343px;
    background-image: url(/stiffneck1.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    background-position: 20% 40%;
    border-radius: 16px;
    /* aspect-ratio: 482 / 412; */
    filter: blur(1px);
    transition: 3s;
    opacity: 0;
  }
  .image2::before {
    content: "";
    display: block;
    width: 100%;
    padding-top: 85.48%;
  }
  .text-wrapper {
    position: absolute;
    top: 10%;
    left: 8%;
    width: 328px;
    height: 291px;
    opacity: 0;
    transition: 4s;
  }

  .suggestion p {
    font-size: 2rem;
    line-height: 175%;
    padding-inline-start: 16px;
    padding-block: 28px;
  }

  .highlight {
    color: var(--highlight);
  }

  .primary {
    color: var(--primary);
    font-weight: bold;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {

    const cb1 = function(el,isIntersecting) {
      if(isIntersecting) {
        const lists = [...document.querySelectorAll(".list")];
        const image = document.querySelector(".image");
        lists.map((list) => {list.classList.add("fadein");});
        image.style.opacity = 0.6;
      }
    }
    const cb2 = function(el,isIntersecting) {
      if(isIntersecting) {
        const image2 = document.querySelector(".image2");
        const textWrapper = document.querySelector(".text-wrapper");
        image2.style.opacity = 0.6;
        textWrapper.style.opacity = 1;
      }
    }

    class ScrollObserver {
      constructor(els, cb, options) {
        this.els = document.querySelectorAll(els);
        const defaultOptions = {
          root: null,
          rootMargin: "-50% 0px",
          threshold: 0,
        };
        this.cb = cb;
        this.options = Object.assign(defaultOptions, options);
        this._init();
      }
      _init() {
        const callback = (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              console.log(entries);
              this.cb(entry.target, true) //true=isIntersectingがtrue
            } else {
              this.cb(entry.target, false)
            }
          });
        };
        const observer = new IntersectionObserver(callback.bind(this), this.options);
        this.els.forEach(el => observer.observe(el));
      }
    }
    const problems = new ScrollObserver('.problems', cb1, null)
    const suggestion = new ScrollObserver('.suggestion', cb2, null)
  });
</script>
