---
import { Image } from "astro:assets";
import refreshing from "../assets/refreshing.webp"
import EffectsByCategory from "./EffectsByCategory.astro";
import MoreButton from "./MoreButton.astro";
---

<section id="effect">
  <div class="effect fadein">
    <h3>ヘッドマッサージによって期待される効果</h3>
    <div class="effect-flexbox">
      <div class="effect-image">
      </div>
      <ul>
        <li>凝り固まった頭をほぐし、<span class="attention">血液やリンパの流れを改善</span></li>
        <li><span class="attention">脳への血流を活性化</span></li>
        <li>脳に溜まった<span class="attention">疲労物質やストレスホルモンを分解</span></li>
        <li>首を柔らかくし、<span class="attention">脳脊髄液の流れを改善</span></li>
        <li><span class="attention">免疫力を高め</span>、疲労回復＆疲れない体に</li>
        <li><span class="attention">自律神経を整える</span></li>
        <li>頭皮のむくみや<span class="attention">老廃物を排出</span>=デトックス効果</li>
        <li>頭皮を健康にし、<span class="attention">毛乳頭細胞を活性化</span></li>
        <li>
          頭皮の健康状態を改善することで、お顔の<span class="attention">しわ・たるみ・クマなどを改善</span>
        </li>
        <li>頭皮を柔らかくし<span class="attention">リフトアップ効果</span></li>
        <li>リラックス効果により<span class="attention">セロトニン（幸せホルモン）が分泌</span>される</li>
      </ul>
    </div>
  </div>

  <div class="triangle-image">
    <img src="/triangle.svg" alt="効果をまとめると" width="94" height="40"/>
  </div>

  <div class="treatement-effect">
    <div class="physical fadein">
      <EffectsByCategory
      src ="/physical-health.webp"
      alt ="カラダへの効果"
      listItem1 = "頭痛の改善"
      listItem2 = "肩こり・首こりの改善"
      listItem3 = "眼精疲労の改善"
      listItem4 = "代謝アップ"
      listItem5 = "冷え性の改善"
      />
    </div>
    <div class="mental fadein">
      <EffectsByCategory
      src="/mental-health.webp"
      alt="内面への効果"
      listItem1 = "自律神経が整う"
      listItem2 = "ホルモンバランスの改善"
      listItem3 = "免疫力・自然治癒力の改善"
      listItem4 = "不眠症の改善"
      listItem5 = "疲労感の改善"
      />
    </div>
    <div class="beauty fadein">
      <EffectsByCategory
      src="/beauty.webp"
      alt="美容への効果"
      listItem1 = "老廃物デトックス"
      listItem2 = "リフトアップ"
      listItem3 = "アンチエイジング"
      listItem4 = "育毛"
      />
    </div>
</div>

<div class="selling-point fadein">
  <strong><span class="marker">当店のヘッドマッサージは</span><br>
    <span class="marker">頭の疲れだけではなく</span><br>
    <span class="marker">全身の疲労回復を目的とします</span></strong>
</div>

<div class="refresh-image fadein">
  <Image src={refreshing} alt="スッキリ！">
    <!-- width="900px" height="551px" -->
</div>

<div class="add-info fadein">
  <p><span class="bold">
    当店でおこなうヘッドマッサージは</span><br>セロトニン脳波測定の実験により<br><span class="secondary">
    脳内のセロトニンが活性化</span><br>されることが証明されました</p>
      <!-- ブログ記事へのリンク -->
  <MoreButton
  href = "/blog/scientific-basis-211004",
  label = "詳しくはこちら"
  width = "140px"
  marginInline = "auto"
  />
</div>
</section>

<style>
  section {
    padding: 24px 16px;
    background-color: var(--bgSecondary);
  }

  /* effect */
  .effect {
    min-width: 343px;
    max-width: 900px;
    margin: 0 auto;
  }

  h3 {
    display: inline-block;
    border-bottom: 3px solid var(--positive);
    max-width: 280px;
  }
  @media screen and (465px <= width) {
    h3 {
      max-width: 500px;
    }
  }

  .effect-flexbox {
    display: flex;
    flex-direction: column;
    margin-block-end: 4rem;
  }
  @media screen and (768px <= width) {
    .effect-flexbox {
      display: flex;
      flex-direction: row;
      justify-content: space-between;
      gap: 2.4rem;
    }
  }

  .effect-image {
    width: 100%;
    max-width: 432px;
    min-width: 240px;
    background-image: url(../assets/effect-headmasserge.webp);
    background-size: contain;
    background-repeat: no-repeat;
    aspect-ratio: 432/368;
    margin-top: 2.4rem;
    margin-bottom: 1.8rem;
  }

  .effect ul {
    padding-left: 16px;
  }

  .effect li {
    list-style: none;
    font-size: 1.8rem;
    padding-bottom: 8px;
  }

  .effect li::before {
    content: "・";
    margin-left: -16px;
  }

  /* 下向き三角形 */
  .triangle-image {
    text-align: center;
  }

  .triangle-image img {
    opacity: 0;
    transform: translateY(-150px);
    transition: 1s;
  }


  /* treatement-effect */
  .treatement-effect {
    max-width: 700px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 2.4rem;
    margin: 6.4rem auto;
  }

  @media screen and (768px <= width){
    .treatement-effect {
      position: relative;
      display: block;
      height: 400px;
    }
    .mental, .physical, .beauty{
      position: absolute;
    }
    .physical {
      top: 0;
      left: 0;
    }
    .mental {
      top: 105px;
      left: 370px;
    }
    .beauty {
      top: 240px;
      left: 80px;
    }
  }

  /* フェイドインアニメーション */
  .fadein {
    opacity: 0;
    transform: translateY(20px);
    transition: 1s;
  }

  /* selling point */
  .selling-point {
    text-align: center;
    margin-block-end: 6.4rem;
  }
  strong {
    font-size: 2.2rem;
    color: var(--textBlack);
    line-height: 200%;
  }

  .marker {
    background-image: linear-gradient(90deg, var(--positive),var(--positive));
    background-repeat: no-repeat;
    background-position: bottom left;
    /* lineが伸びるアニメは　0%　30%　でスタートする */
    background-size: 100% 20%;
  }

  .refresh-image {
    max-width: 900px;
    max-height: 551px;
    display: block;
    margin: 0 auto;
    /* background-color: rgba(0, 0, 0, 0.2); */
  }
  .refresh-image img {
    width: 100%;
    height: auto;
    opacity: 0.8;
    margin-block-end: 2.4rem;
  }

  .add-info {
    margin: 0 auto;
    max-width: 320px;
    text-align: center;
    margin-bottom: 1.6rem;
  }
  @media screen and (528px <= width ) {
    .add-info {
      max-width: 500px;
    }
  }
  .add-info p {
    font-size: 1.8rem;
    line-height: 200%;
  }
  .bold {
    font-weight: bold;
  }
  .secondary {
    font-weight: bold;
    text-decoration: underline;
    letter-spacing: 1.2px;
    font-size: 2rem;
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    class ScrollObserver {
      constructor(els, cb, options) {
        //監視対象のelementsを取得
        this.els = document.querySelectorAll(els);
        //オプションのデフォルト設定を定義
        const defaultOptions = {
          root: null,
          rootMargin: "0px",
          threshold: 0,
        };
        this.cb = cb;
        //デフォルト設定に、個別設定のオプションをマージする
        this.options = Object.assign(defaultOptions, options);
        //
        this._init();
      }
      _init() {
        const callback = (entries) => {
          entries.forEach((entry) => {
            //監視対象の要素が領域内に入った場合の処理
            if (entry.isIntersecting) {
              this.cb(entry.target, true); //true=isIntersectingがtrue
              //処理後に監視を切る処理
              observer.unobserve(entry.target);
            }
          });
        };
        const observer = new IntersectionObserver(callback.bind(this), this.options);
        //対象の要素elを監視
        this.els.forEach(el => observer.observe(el));
      }
    }

    const triangle = function(el, isIntersecting) {
      if(isIntersecting) {
        const triangleImage =document.querySelector(".triangle-image img");
        el.style.opacity = 1
        el.style.transform = "none"
      }
    }
    const triangleTrigger = new ScrollObserver(".triangle-image img", triangle , {
      rootMargin: "0px 0px",
      threshold: 1,
    })


    const fadein = function(el, isIntersecting) {
      if(isIntersecting) {
        el.style.opacity = 1;
        el.style.transform = "none"
      }
    }
    const fadeinTrigger = new ScrollObserver(".fadein", fadein , {
      rootMargin: "-200px 0px",
      threshold: 0,
    })

  });
</script>
