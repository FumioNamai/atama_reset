---
import Layout from "@layouts/layout.astro";
import { getBlogs, getBlogDetail } from "../library/microcms";

export const prerender = true;
// 詳細記事ページの全パスを取得
export async function getStaticPaths() {
  const response = await getBlogs({ fields: ["id"] });

  return response.contents.map((content) => ({
    params: {
      blogId: content.id,
    },
  }));
}


// 記事の詳細情報を取得
const { blogId } = Astro.params;
const blog = await getBlogDetail(blogId as string);


const articles = blog.article;

// 日付の表示を変更
let pubDate
if (blog.publishedAt) {
pubDate = new Date(blog.publishedAt).toLocaleDateString("ja-JP").split("/").join(".")
}

---

<Layout>
  <main>
    <div class="container">
    <p class="publishedAt">{ pubDate }</p>
    <h2 class="title">{blog.title}</h2>
    <div class="image"><img src={blog.eyecatch.url} alt="" height={blog.eyecatch.height} width={blog.eyecatch.width}/></div>
    <article>
        {
          articles.map((article) => {
            switch(article.fieldId) {
              case "rich_editor":
                return <div set:html={article.rich_editor}></div>
              case "image":
                return <div class="image"><img src={article.image.url} alt="" height={article.image.height} width={article.image.width}/></div>
              case "text":
                return <p>{article.text}</p>
              default:
                break;
            }
          })
        }
    </article>
  </div>
  <aside>
    ブログ一覧
  </aside>
  </main>
</Layout>

<style>
  .container {
    margin: 0 auto;
    max-width: 640px;
    padding-inline: 1.6rem;
    padding-block: 4rem;
  }
  .publishedAt {
    font-size: 1.4rem;
    padding: 0;
  }

  .title {
    padding-block: 1.6rem;
  }
  article {
  }
  .image {
    margin-block: 1.6rem;
  }
  img {
    width: 100%;
    height: auto;
  }
  aside {
    display: none;
  }
  @media screen and (768px <= width) {

  main {
    display: flex;
    flex-direction: row;
  }
    aside {
      display: block;
      width: 40%;
    }
  }

</style>
