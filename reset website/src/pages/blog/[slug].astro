---
import Layout from "@layouts/layout.astro";
import { getBlogs, getAllPosts } from "../../library/microcms";
import BlogSummary from "@components/BlogSummary.astro";
// import Paginate from "@components/Paginate.astro"
// import { getCollection } from 'astro:content'

export const prerender = true;
// 詳細記事ページの全パスを取得

export async function getStaticPaths({}) {
  const blogs = await getBlogs({ fields: ["id"]["slug"] });

  return blogs.contents.map((content) => ({
    params: {
      // []内に入れる変数を指定
      slug: content.slug + "-" + content.id,
      // page: content.slug,
    },
    props: { content },
  }));

}

// 記事の詳細情報を取得
const { content } = Astro.props;

const articles = content.article;

// 日付の表示を変更
let pubDate;
if (content.publishedAt) {
  pubDate = new Date(content.publishedAt)
    .toLocaleDateString("ja-JP")
    .split("/")
    .join(".");
}
// aside用 microCMSを呼び出す
const posts = await getAllPosts(5);
---

<Layout>
  <main>
    <section class="blog">
      <div class="container">
        <p class="publishedAt">{pubDate}</p>
        <h2 class="title">{content.title}</h2>
        <div class="image">
          <img
            src={content.eyecatch.url}
            alt=""
            height={content.eyecatch.height}
            width={content.eyecatch.width}
          />
        </div>
        <article>
          {
            articles.map((article) => {
              switch (article.fieldId) {
                case "rich_editor":
                  return <div class="setHtml" set:html={article.rich_editor} />;
                case "image":
                  return (
                    <div class="image">
                      <img
                        src={article.image.url}
                        alt=""
                        height={article.image.height}
                        width={article.image.width}
                      />
                    </div>
                  );
                case "text":
                  return <p>{article.text}</p>;
                default:
                  break;
              }
            })
          }
        </article>
        <!-- <Paginate /> -->
        <div class="back">
          <a href="/blogs/1">一覧に戻る</a>
        </div>
      </div>
      <aside>
        <div class="blog-list">
          <h3>最近の投稿</h3>
          {
            posts.map((post) => (
              <BlogSummary
                id={post.id}
                slug={post.slug}
                src={post.eyecatch.url}
                date={post.publishedAt}
                title={post.title}
                summary={post.summary}
              />
            ))
          }
        </div>
      </aside>
    </section>
  </main>
</Layout>

<style>
  .container {
    margin: 0 auto;
    height: auto;
    max-width: 640px;
    padding-inline: 1.6rem;
    padding-block: 4rem;
  }

  .publishedAt {
    font-size: 1.4rem;
    padding: 0;
  }

  .title {
    padding-block: 1.6rem;
  }

  .image {
    margin-block: 1.6rem;
  }

  img {
    width: 100%;
    height: auto;
  }

  aside {
    display: none;
  }

  main a {
    padding: 0.8rem;
    text-align: center;
  }

  .back {
    text-align: center;
  }

  .back a {
    margin-block: 4rem;
    border: 1px solid var(--textBlack);
    padding: 1.2rem;
    font-size: 1.6rem;
    text-decoration: none;
    color: var(--textBlack);
  }
  .back a:hover {
    border: 1px solid var(--textWhite);
    color: var(--textWhite);
    background-color: var(--textGray);
  }

  @media screen and (768px <= width) {
    section {
      display: flex;
      flex-direction: row;
      max-width: 900px;
      margin: 4rem auto;
    }
    aside {
      display: block;
      min-width: 300px;
    }
    h3 {
      padding-inline-start: 2.4rem;
      font-size: 2rem;
    }
    .blog-list {
      display: flex;
      flex-direction: column;
      gap: 2.4rem;
      position: sticky;
      top: 200px;
    }
  }
</style>

<!-- ブログ記事内に適用するCSS -->
<style is:global>
  .setHtml p {
    line-height: 3rem;
    padding-bottom: 4rem;
  }
</style>
