---
import { getNews } from "src/library/news";
import { getAllPosts } from "src/library/microcms";
import MoreButton from "./MoreButton.astro";

const posts = await getNews({ limit: 2 });
const data = posts.contents.map((content) => ({
  title: content.title,
  tag: content.tag,
  summary: content.summary,
  pubDateDisplay: content.pubDateDisplay,
  publishedAt: content.publishedAt
    ? new Date(content.publishedAt)
        .toLocaleDateString("ja-JP")
        .split("/")
        .join(".")
    : "",
}));


const blogPosts = await getAllPosts(1);
const blogData = blogPosts.contents.map((content) => ({
  id: content.id,
  title: content.title,
  slug: content.slug,
}));
---

<section class="news">
  <h2>お知らせ</h2>
  <p class="flex attention bold">ホームページをリニューアルしました！</p>
  <div class="container">
    {
      data.map((content) => (
        <a href={`/news#${content.title}`}>
          <div class="news-header">
            {content.tag.map((tag) => {
              switch (tag) {
                case "重要":
                  return <div class="tag important">重要</div>;
                case "NEW":
                  return <div class="tag new">NEW</div>;
                case "緊急":
                  return <div class="tag emergency">緊急</div>;
                default:
                  break;
              }
            })}
            <div class="wrapper">
              <p>{content.title}</p>
              <div class="setHtml" set:html={content.summary} />
            </div>
          </div>
        </a>
      ))
    }
    <MoreButton
      href="/news"
      ,
      label="もっと見る"
      ,
      width="114px"
      marginInline="auto 0"
    />
  </div>

    <h2>最新のブログ</h2>
    <div class="container">
    {
      blogData.map((content) => (
        <a href={`/blog/${content.slug}-${content.id}`}>
          <div class="news-header">
            <div class="wrapper">
              <p>{content.title}</p>
            </div>
          </div>
        </a>
      ))
    }
    <MoreButton
      href="/blogs/1"
      ,
      label="もっと見る"
      ,
      width="114px"
      marginInline="auto 0"
    />
  </div>

</section>

<style>
  p {
    padding-block: 0.8rem;
    line-height: 150%;
  }

  a {
    text-decoration: none;
    color: var(--textBlack);
  }

  a:hover {
    color: var(--textGray);
  }

  .container {
    max-width: 400px;
    margin-block: 2.4rem;
    margin-inline: auto;
  }

  .news {
    opacity: 0;
    transform: translateY(20px);
    transition: 1s;
    margin-block-end: 2.4rem;
    padding: 4rem 2.4rem;
    background-color: var(--bgSecondary);
  }
  h2 {
    text-align: center;
    margin-bottom: 2.4rem;
  }

  .news-header {
    border-bottom: 1px solid var(--textBlack);
    margin-bottom: 1.6rem;
    transition: all 0.5s;
  }

  .publishedAT {
    padding-block: 0.4rem;
    margin-left: 1.2rem;
    font-size: 1.4rem;
  }

  .wrapper {
    display: flex;
    flex-direction: column;
    margin-left: 1.2rem;
  }

  .tag {
    transform: rotate(-15deg);
    margin-left: -10px;
    margin-bottom: -10px;
  }

  .setHtml {
    padding: 0;
  }
</style>

<script>
  import { ScrollObserverUnobserve } from "./ScrollObserverUnobserve";
  document.addEventListener("DOMContentLoaded", function () {
    const fadein = function (el, isIntersecting) {
      if (isIntersecting) {
        el.style.opacity = 1;
        el.style.transform = "none";
      }
    };
    new ScrollObserverUnobserve(".news", fadein, {
      rootMargin: "-100px 0px",
      threshold: 0,
    });
  });
</script>
